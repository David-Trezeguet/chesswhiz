<?xml version="1.0" encoding="utf-8"?>
<mx:Panel xmlns:mx="http://www.adobe.com/2006/mxml" layout="absolute" width="848" height="532" initialize="init()" title="Tables">
<mx:Script>
	<![CDATA[
		import hoxserver.TableInfo;
		import mx.collections.ArrayCollection;

		[Bindable]
		private var tableListDP:ArrayCollection = new ArrayCollection();

		private function init() : void
		{
			this.name = "viewTablesPanel";
		}

		public function setTableList(tableList:Array) : void
		{
			// Add Table header column names
			var colNames:Array = [  "tid",
									"group",
									"gametype",
									"initialtime",
									"redid",
									"redscore",
									"blackid",
									"blackscore" ];
			var tableInfo:Object = {}
			var tableData:TableInfo = null;
			var value:String = "";
			var nValue:int = 0;

			for (var i:int = 0; i < tableList.length; i++) {
				tableData = tableList[i];
				if (tableData) {
					tableInfo = {};
					for(var j:String in colNames)
					{
						value = tableData[colNames[j]];
						if (colNames[j] == "tid" || colNames[j] == "redscore" || colNames[j] == "blackscore") {
							nValue = parseInt(value);
							tableInfo[colNames[j]] = nValue;
						} else {
							if (colNames[j] == "group") {
								if (value == "0") {
									value = "public";
								} else {
									value = "private";
								}
							} else if (colNames[j] == "gametype") {
								if (value == "0") {
									value = "Rated";
								} else {
									value = "Unrated";
								}
							}
							tableInfo[colNames[j]] = value;
						}
					}
					tableListDP.addItem(tableInfo);
				}
			}
		}
        private function sortTid(obj1:Object, obj2:Object) : int {
            return Util.sortNumeric(obj1, obj2, "tid");
        }
        private function sortRedScore(obj1:Object, obj2:Object) : int {
            return Util.sortNumeric(obj1, obj2, "redscore");
        }
        private function sortBlackScore(obj1:Object, obj2:Object) : int {
            return Util.sortNumeric(obj1, obj2, "blackscore");
        }
        private function onRefresh(event:Event) : void
        {
     		Global.vars.app.doViewTables();
        }
        private function onJoin(event:Event) : void
        {
 			if (this.tableListDG.selectedItem) {
				trace("selected tid: " + tableListDG.selectedItem.tid);
				Global.vars.app.doJoinTable(tableListDG.selectedItem.tid);
			}
        }
	]]>
</mx:Script>
	<mx:DataGrid x="10" y="10" id="tableListDG" dataProvider="{tableListDP}" height="392">
		<mx:columns>
			<mx:DataGridColumn headerText="tid" dataField="tid" sortable="true" sortCompareFunction="sortTid"/>
			<mx:DataGridColumn headerText="group" dataField="group"/>
			<mx:DataGridColumn headerText="gametype" dataField="gametype"/>
			<mx:DataGridColumn headerText="initialtime" dataField="initialtime"/>
			<mx:DataGridColumn headerText="redid" dataField="redid"/>
			<mx:DataGridColumn headerText="redscore" dataField="redscore" sortable="true" sortCompareFunction="sortRedScore"/>
			<mx:DataGridColumn headerText="blackid" dataField="blackid" sortable="false" sortCompareFunction="sortBlackScore"/>
			<mx:DataGridColumn headerText="blackscore" dataField="blackscore"/>
		</mx:columns>
	</mx:DataGrid>
	<mx:Button x="594" y="435" label="Refresh" id="refreshButton" width="95" click="onRefresh(event)"/>
	<mx:Button x="718" y="435" id="joinButton" label="Join" width="94" click="onJoin(event)"/>
</mx:Panel>
