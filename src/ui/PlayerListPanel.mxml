<?xml version="1.0" encoding="utf-8"?>
<mx:Panel xmlns:mx="http://www.adobe.com/2006/mxml" layout="vertical"
	creationComplete="onCreationComplete()">

	<mx:Script>
		<![CDATA[
			import mx.events.ListEvent;
			import hoxserver.PlayerInfo;
			import mx.collections.ArrayCollection;

			public static const INVALID_INDEX:int = -1;

			[Bindable]
			private var _playerList:ArrayCollection = new ArrayCollection();

			private function onCreationComplete() : void
			{
				playerDataGrid.addEventListener("playerDropdownClick", _onPlayerDropdownClick);
			}

			/**
			 * Add a player to the list.
			 * @return true if the player just joined the list.
			 */
			public function addPlayer(pid:String, score:String) : Boolean
			{
				const playerIndex:int = _findPlayerIndexInList(pid);
				if ( playerIndex == INVALID_INDEX )  // Not yet in the list?
				{
					var playerRow:Object = { "pid"    : pid,
											 "rating" : score
										   };
					_playerList.addItem(playerRow);
				}
				else // Already in the list, update the Rating then.
				{
					var foundPlayer:Object = _playerList.getItemAt(playerIndex);
					foundPlayer["Rating"] = score;
				}
				return (playerIndex == INVALID_INDEX);
			}

			/**
			 * Remove a player from the list.
			 * @return true if the player was removed in the list.
			 */
			public function removePlayer(playerId:String) : Boolean
			{
				const playerIndex:int = _findPlayerIndexInList(playerId);
				if ( playerIndex != INVALID_INDEX )  // Found?
				{
					_playerList.removeItemAt(playerIndex);
					return true;
				}
				return false;
			}

			/**
			 * Remove all players..
			 */
			public function removeAllPlayers() : void
			{
				_playerList.removeAll();
			}

			/**
			 * Find a given Player in the Player-List DataGrid.
			 * @return INVALID_INDEX if the Player is not in the list.
			 */
			private function _findPlayerIndexInList(playerId:String) : int
			{
				for (var i:int = 0; i < _playerList.length; ++i)
				{
					if ( _playerList[i]["pid"] == playerId )
					{
						return i;
					}
				}

				return INVALID_INDEX; // "Not found".
			}

			private function onItemDoubleClick(event:ListEvent) : void
			{
				Global.app.doQueryPlayerInfo( playerDataGrid.selectedItem.pid );
			}

			private function _onPlayerDropdownClick(event:Event) : void
			{
				var myPopupButton:RendererDGDropdown = event.target as RendererDGDropdown;
				if ( myPopupButton == null ) // just sanity check!
				{
					return;
				}

				const selectPID:String = playerDataGrid.selectedItem.pid; // Player-ID.
				switch (myPopupButton.selectedIndex)
				{
					case 0: /* Info */    return Global.app.doQueryPlayerInfo(selectPID);
					case 1: /* Invite */  return Global.app.doInvitePlayer(selectPID);
					case 2: /* Message */ return Global.app.popupPrivateChatWindow(selectPID);
				}
			}

		]]>
	</mx:Script>

	<mx:DataGrid id="playerDataGrid" dataProvider="{_playerList}" width="100%" height="100%"
			doubleClickEnabled="true" itemDoubleClick="onItemDoubleClick(event)">
		<mx:columns>
			<mx:DataGridColumn headerText="{resourceManager.getString('localization', 'Id')}"
				dataField="pid" width="130"/>
			<mx:DataGridColumn headerText="{resourceManager.getString('localization', 'Rating')}"
				dataField="rating"/>
            <mx:DataGridColumn headerText=""
                itemRenderer="ui.RendererDGDropdown" width="12" />
		</mx:columns>
	</mx:DataGrid>

</mx:Panel>
